<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxASEhUSExIVFhUWFRYXFhgXGBYWHRcXFhUXFxkXFxUY
        HisgGB8lGxcdITEhJSkrLi4uGB8zODMtNygtLi3/2wBDAQoKCg4NDhsQEBstJSAmLS8vKy0tLS0tLS0t
        LS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCAC0ARgDAREAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAUGAwQHAgEI/8QARxAAAQMBBQQGBQkFCAIDAAAAAQACAxEEBRIhMQZB
        UWETInGBkbEHMkKhwTM0UmJygpKy0SNTc6LwFBUWdIPC4fGz0iRDVP/EABsBAQACAwEBAAAAAAAAAAAA
        AAAEBQECAwYH/8QAOhEAAgICAAQDBQYEBQUBAAAAAAECAwQRBRIhMUFRcRMyM2GhFCI0gZHBI1Kx0QYV
        QlNyJGLh8PEW/9oADAMBAAIRAxEAPwDuKAIAgCAIAgIW/IqPZJuPUd5tPmO9RMiPaRIol3iaijkgICXu
        mWrKfRPuKmUS3HRFujqWzeXc4hAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQGvb7P
        0kbmcRlyIzB8VpOPNFo2hLleyvwvqATrv7Rkfeq4nHtZBtXZLheOeX6LrTLUjlbHcSbU4iBAEAQBAEAQ
        BAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAV63xYJnDc/rjt0cPI96g3R5Z+pMqluPoY1yOgB
        pmnYFihkxNDuIVjF7WyBJaej2tjAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEBG3
        7DWPGNYzi7tHDw8lwvjuO/I60y1IiwVDJZ9QErdEtWlvA17j/wAqXjy6aIty67JBSDiEAQBAEAQBAEBp
        mQ0L8RArkKVy0FBrU/Fa+I8NmJlreOuQSw9lB2HhzOR1BGQO5rs3o5A4VB/rgRuKwbI9oAgCAIAgCAIA
        gCAIAgCAh7z2nscFQ+YFw9lnXPYQ3TvosbNlBsmFk1CAIAgCAIAgPjhUUOhQFYbGWF0Z9g0H2Tm0+CrZ
        R5W0T4vmSZ7WDJsXfLheOByPf/yulUtSOdsdxJ1TyGEAQBAEAQBAYrQ7q5anId+/49ywwaTQJXYR6jff
        l8R7s/aFMroavqSNN25DY0ZrIW9aPTe3ly49m7cRocmuvI+2acn1XZ/RdnprQ6+OY3gLV9DKezYE9PWB
        HPUeI076JsyZWuBzBqFkH1AEAQBAEAQETee0lkgqJJm4vot67vwt076LGzZQbKpeXpGOYghp9aQ/7Gn4
        rHMdFV5lUvK/7XPXpJnEH2R1W/hbQHvqsbOqgkRiwbHf10IQQBAEAQBAEAQELfkWF7JBoeo7zafMeCiZ
        EeqkSaJeBqKOdwgLBZpcTQeIz7d6sYS5opkGS09GVbGoQBAEAQBAaNveD1agbqnTERk3v38jzQ1bNKS7
        murgLw4tLZGmV7Dno6rTlmTSgpnyXOydsZRcEn578jCrhKLjJv8AV/3M9jtL2RsLwMLeo4gucQW9QucT
        uxDM86rFrsVifTl8fP5G9MYygku/9iTquoI21yQuqQ8AjVwqQCPpFulONQR7jxeRCM1B+Py6dPmbexk+
        uj7BbcutTTJwIIPOoypzGXGmi66T6o1249Gb8LKADx7d6yD2gCAIDVvO8I7PGZZSQxtKkAu1IAyA4lDK
        W3pFKvL0jaiCH70h/wBjT8VrzHVVeZVLy2itc9RJM7CfZb1G9lG699VjZ0UEiKWDc+oAgMT7Q0b/AAWd
        GNn6DW5DCAIAgCAIAgCA17fZ+kjcziMuRGYPitJx5otG0Jcr2V+F9QDv38iNVXE49rIJO55dW94+KlY8
        vAjXx67JJSTgEAQBAEBgtM2EUHrHT9e6vvA3oYbMdnioMj1t4PHXPnvqPLJDCRrSsc016xAz+uyu9p9p
        vJZMdjRtUDeimd0so6SrwWONCQ0dVraEtJw5t31NK7ukZbaWkcJw1GUk35m1Z3WZzW4nmlBhZISwAbgW
        OpiPbVRYY8obU3zdX/8AOhJWXFra6b/J/UlY8NOrSm6mnuXXWhzb67NK8LLCBjLaOrkWksJNN5GuWZrX
        Kqxyrezd2PWmZrvjcG58qDSmXDdXWm6tFk0RtIZCA1rbbGxCp13DeVzssUFtnWqmVj0iDvaf+02WdpAB
        6o7i4UPitabfaJm2TV7HTRyYimR1Wx13s+EgaoZML7U0c1nRjZJ3fcF4Wj5KzuDT7T+oO2r6VHYCs6NH
        NFmu/wBGEjs7TaKcWxCv87sv5VnRzdnkWu69irvgoRAHuHtSftDXiA7qjuAWTRybLChqEAQBAEAQBAEA
        QFdt0WCZw3P647dHD496gXR5Z+pMqluJ4XM6G1dzXYwQDTQ9h5rrSpc20jla1y6ZNqcRAgCAIDxLIGgk
        /wBcAOaA1oYySXONHcOHAcx8anhQamSRw35O3U39nHsKGQ1v0vWOhHkDu7PNAeWwNBOJo62RO49o0BQx
        o8dJgJbXGKVpq5o/3D39qyPkenWaAjHhZSlcQAGXHEE5mauuD66Nex2fE4uOLCDkHOc7Td1id4qeYA3G
        psQjok1g6HjpG6VHiFjmRnlfkaNuvVjMm9Z3uHafguNl8Y9F3JNOLKzq+iK/PM55LnGpP9ZKvlJye2Ws
        IRgtRM1is75BI1u9o1+0CPIqRib5mQuIadaXiVa89hbc+0OEfRtjNHYy6gqfWFAC6oNdwGanaIMJ6iky
        Uu30YQihtE75DwZ1B2Emrj3EJoOxltuvZ6x2f5GBjT9KmJ343Vd71k0cmyTQwEAQHHbt9LFrblNDFKOL
        S6J3f6wJ7gp8sSPgyIsh+J07Z2+m2uzstAY6Nr8VA+leq4trUGlKhQrI8j02SYS5ltGzNeEbd9Tyz9+i
        izya4+OyRDHnLwIW89o2sIa52CoqKAkkdoC0h9oyE3Uuhrffi4jSul1ZoQbSwsNRL2gtea+5Zhh5cHtL
        6nGfF+HyWub6ErFtfYyOtIQeGF58mqfHHta6xIb4ni70p/QkrvvWCevRStfTUA5jtacx3haShKPdEmu6
        uxbg0zdWp1CA07xsXS4c6Frq1pXI5Ed/wXKyvnRvXPlZGWomBj5HMLgwEnKpoNSATQrRVqPXRtzym9FZ
        i9IDjMyrMMNevvdShoRTIUNDTNFc9/I6/ZunfqZb19Iuos8X35Pgxp8z3LLu8hHG/mZTrdtfa3PDnWiS
        oPsHC0fdbQH3rnzSfXZ2VcEuxabg9Irsm2huMfvGUDh9pmh7qdi6Rta945Tx0+sS/wB32+KdgkieHNO8
        ceBBzB5Fdk01tEWUXF6Z4mJL6HKnqA+0aZkHiNAN2ZWTQxNcRlw7iK8Nw7PVO7gsmDOxwd62Y0G7Pnwc
        sGTI7LJ2bePDt/X/ALQyNPrN8SB8R/WaAwz2YOAIzpoRq37J3jkhhrZpy1GRNSSPVyxZ5Et3Or5EnJqy
        akrEyjQOA3LB0NO97Z0bMvWdkOXErhfZyR6dyRjU+0n17Iq39maD6orvrmc+ZVa46ZcqfMvkbMdlkdox
        x7j5rdVzfZHOV1ce7R8ngew0c0gpKEo9zMLIzW4sl9nYsnO4kAd3/al4sejZAzpbkokypZACAIAgCAID
        8t0O4VO4cTwV0Vp+hIrKLPZYLOPYYxpPHC0VPe7Necz7Nr1ZdYVfX0NZVRZEZed1MlIJeWkCg08ip+Fm
        Tx01GO0yn4nwyrMlGU58rS14EHeVzviLaHGHODBlTrONGg57yaVV3icQhftNaZ5jP4JbjacHzJni2XLa
        Ym45IXNbvORp24SaKZG6EnpMrrMO+qPNOLSI8PexwkjcWyMza4a9nMHgtpRUlpnOm6VUlKLOsbOXqLVZ
        45qULhRw4OaaOA5VHgqiyHJJxPZ493ta1M2jeEAy6WP8bf1WOSXkdPaR80fP7xg/fR/jb+qckvIe0h5o
        +PvCzkEGWKm+r26eKckvIe0j5o5RtNcDrO4yMo6zvd+zeHAjOpDDnqKHPfRQbkq/e6IsIXxcerIeCB7z
        RrSez4ncoVubTWttiWTBdupJG45AAQ4Yt408Cq1cYg5NTj905LIb95dDVnuN5Be5obhFThIDiBrSmWi6
        riVMJJVtvfg+xrKxQ6w/Q6tsbYYobJG2KSSRjqvBkIJGLMtoAAKHd2r0VUlKClHsznKfO+YmZGBwoRUL
        oamoa064NB7WRLe36Q5+I3oa6PBaW8M9CMw4cOfYc+B3LJgzwz/9anuPtD3hYMpnp7sLS9uYpUjd3cFx
        yLlTVKxrels3jHb0aDryG5pFdc/fyPNea/8A1Vf+2/1JP2R+Z8uZ4l69NCfGlK+FRyAHOt/hZayqvaJa
        ON1DpnytkwphzKjeF5NNqfGQS5gNBTqigBFSdfWrlXgol1ct+0l28CTjZlLn9ng/vd5fI1LDtDZWPcXB
        7yDQEAFtd5BJzNV1x8WWueRX5/H8eufso7eu+iS/xtZvoS+Df/ZSvZMrf88x/JmC03wy1UMYcA2o6wAz
        NOBKgZkWpJF/wbMryYTnDwZYy+OzxDG4Na0Zk7z8STuUqqt6UYmlk+aTkyBtG2sQPUic4cSQ39SpscOT
        7s5cxiZtw2ucDqfVcCfAgD3o8KXgxzE/dN8QWlpMT6kes05Ob9pp07dCo065QepGUzfWhkIAgOfR+iSw
        xzxzRSTsDHtf0ZcHsOF2KmYxajiV19tLWjl7GO9l0ku9rgASagUBHDsUOyiNnclV3Sr7GJl0Nrm4kcNP
        euSw4p9Wdnlya6IpvpGszOlhGEUEZpl9ZXWDFKLSPJccsl7SHXwf7ERdF8TROii6rozLG2rgasaXiuda
        UA0J0Wl+BXKftV0fyN8HjNqgqJaa82X/AGivazizyjpGOLmOa1ocCSXAgZDt1XKmuTmuhYZuTVGmW2nt
        a0cwVseOL/6M4yLFU6Olkc3sqG+bSqvKf8Q9hwxNULZzK8h+2l/iyfnKuq39xeh525fxJer/AKmCOIu9
        VpNNaAmnbRbOWu7NFBvsvofZ7JJhd+zfofZdw7FhzWu5vCqXMvuv9C/XdG4XZYwQRQOBBFM6upUHvXgf
        8T76NduZnrqF/DjvyI+8GPLKMr6wxAGhLd4adxXl8aUFYnZ2N5p66F1jksL4ejaY2NpkCAwtPGjqGq9f
        J4eTV7NOOn6dAuhhZszE4VEpIO8BpUGPAKu6sf0M7JC5brFlgELXlwbiIJoD1iXbuZV5TV7KvlTMQjrS
        OWR7R22g/wDkyaDeqVZNv8zPePhuL/touPouvKe0QTumkdIW2lzWl2dGiOM08SfFW2LOU4bkeZ4vTXVc
        lWtLX7swekC2ywPibFI5jXteXBpyJBbu71wzrZwceV6JXBcWm6M/aRT1r9yojaK1iaCs8haZmYhX1hUZ
        cdMqrhj32SsSbLLMwMaNMnGCT0zptjvDponOAI9YbjWg1NMvvDv4KZxRaxbP+LPH1e+jUXywuDf2XH7E
        /bd8F9G4D+EXqyHxD435ImFckIo9/bLWma0SSNDC1xBFXUPqgaU5LvGcUtM83mcMybMiVletP568Ct3l
        d8lnf0clMVAeqaihrTyXVNNbRSZONPHnyT79zDZITJKyJvrPJDa5DIVzPcjelsxRRK6ahHuyz3Xs3bYp
        GmkZaXNxjEfVBzIy1oo10a7Nb8D03CsfMwpvtyy79fqYds7a59oMderGAAOZAJPvp3KwxIJQ35lvIhrv
        sr55RDGKuILjU0DWjLE49pAy4rtZYq1tmEjevm45bNhxEODtC2uo3EHRaVXxsDWiNstrfZ5op21Ba4Nf
        9Zjj1gf61os2xjKLQR15VB0CAIAgCAICg+kX5aL+GfzKww/dZ5vjnxIej/YqQ4cchzPAKYUiTfRH1zSD
        QggjUEUPeE3sw46emj3Y7L080dnLxGJDQvP5W/WOgrxXOyfJFyJeFQrrVFvR2CxWVkUbY2CjWNDWjkFU
        NtvbPZwgoRUV2Rw28vlpf4sn5yvQ1+4vQ8fd8SXq/wCpK7D33HYZbRJI1zhKIwAymWDHWuIj6SjZOPK3
        WmWGHnQojqSZa5/SbZWNLjBPQcOj/wDdRHgTXiifDitUnrT+hbJYmWmEVBAe1rhxFRUd+aqcvFhfW6pl
        mnvqVq07PztOQDxxBp7ivJ38Fya391cy+RnZpTWGVgq6NwHGhp4qDZhX1rc4NIGphIOJjjG/c9uRrz+k
        ORyWMfKsoluDMOOy27MXw602cueAJGF0clNC5oBqO0Ed9V7jEyPb1c3iYrezkUXqjsHkqRdj6Uy+eh35
        vaf82/8A8USusL4Z5Djnx4+n7sx+lD5SD7EnmxRuIe9H8yZ/h/3bPVfuUZsRdPZmjUzsA7S4KPi/FRbZ
        3wJejOsXTZHtheHtw4XOJH0jQUPZv5mnDOy4q94tn/FnhavfRjXystyQ2X+R++74L6NwH8IvVkPP+L+S
        JdXJCCA5zt386/02eblJq908hxv8V+S/cjNnPn1m+0/8hW0/dZy4V+Ij6nWVEPaHP9tLC5k5kp1ZKUP1
        gACPAVVliTThy+RpIhLBaXwyiaM0eAWneHNNDhcOFQPBd7K1NaZhPRY4ttph60THdhczzxKK8JeDM8xM
        XTtbBM8RuBjkdk0OoWuPBrxv5GhUezHnDr3RsnssC4GQgCAIAgCAoPpF+Wi/hn8ysMP3Web458SHo/2K
        pZfnFm/zEX5wpNnuMr8H40fVF02+ujS0sHBsnk13w8OCh4lv+h/kWvGcTa9tH8/7lGlZUZGhBqCNQRoQ
        VPKCE3F7R1LZC/P7XAHO+VZ1JR9Ye1TgRn4jcqm6v2cteB7PDyVfWpePicivL5aX+LJ+cq8r9xeh5i74
        kvV/1NrZy5Zba+VkRYDEGF2MkA48VKYQfolcrsiNXckUYNly3Fol7X6Nba5haJLPU8XScf4a4PPrfgyX
        Xwu6Mttr6/2Lte5mghhwvIwtDH4dKhopqORXj+N3X1RjZVJpb6/sX0VpaIKe87UaYZ3Agg7iDT2XDgVQ
        1cWyYS3KTaMyTfYm/wDE4LM4jjppUFvjqfBWs+P1uDSg9/loIrZXmO7MkzsBCegnlIo2WVxZzaBSvjUd
        y9twutwo6+P9jSrvv5nNIvVHYPJVq7H0t9y+eh35vaf82/8A8USusL4Z5Djnx4+n7sx+lD5SD7EnmxRu
        Ie9H8yZ/h/3bPVfuUyw/OrJ/mYvzBRsb4iLXP/Dz9GdvtvybvsnyVhxL8JZ/xZ4ev30V5fLi2N/Zf5H7
        7vgvovAn/wBIvVkPP+L+SJhXO0Qgsg5zt386/wBNnm5SavdPIcb/ABX5L9yM2c+fWb7T/wAhW0/dZy4V
        +IidZUQ9oQtvv2xVdFK6tCQ5pY4io7qLvCizpKJjaIey2G67TIY4nPDw3FhGIZVAqMYz13LtKy+tbkY0
        mae0ezjbOwSMkJGICjqVzroRrppRdaMh2S00Ya0Va3DqE6EUIPAg6hSmt9DU65dNoMkEUh1fGxx7XNBK
        pZrUmjqba1AQBAEAQEdedyWe0EOlYXFooOs4ZVruK6QtlD3SNfh1XtOxb0abNkbEHNeIjVjg5vXfk5pq
        DrmtnkWNabOdfDseEuaMevqTM8LXtLHCrXAgg7wciFyTae0S5wU4uMuzIb/CNi/dH8b/ANV2+02eZA/y
        rF/l+rPdku2x2NznsGFzwAes51QNOqSfFcbsnp99k3FwIw+FE4/eDgZZTuMkh8Xlegq9xeh5K5atkvm/
        6m7sxfb7C+WRjWvMoYCHVywYqUp9pcrseNutslY+dKhaSLA70kWj9zF4u/VcP8vj5skri89+6i37KXmb
        fYmTSsaOkxgtFadWRzRSufs1VXlUQe65dUXVU+eKka9r2YNaxvFODq5d418F5fI4A97pl08n/c67NQ7O
        2jgz8X/CiLgWV/2/r/4GzJBsk5/y8gDN7I69bk6QgGnIAdqs8Tgca3zWPbNGm+5aI4WtaGNAa0DCAMgB
        SlAFeqKS0jZdDiNos7onOjdk5hLT2tyXnZR5G4vwPolVitgprs+pObB3+2xdLHI0mOSTpA5uZa4gNIc3
        eKNGYqeSnYuVGuPLIp+KcNsyJKdfddNHja6/W2uVpY0hjGkNxUqampJA00C45V6tkmuyJPC8GWLW1N9W
        RVxWd0tussbdRIJXcmx9Yk+FO0hMSLdiN+KWKGNJv0/U6rfd6mN7YhHiDxm7FTDU00p+ik8Usax5wS7p
        nlMXH9onPfYiZZHtNaAheOxsXEyIcibjP5ljGMZep6/tjQN/YkOF5ak4qWl57NfYts157UXCmmYOvBWV
        HDJwkpO1v/31OkaUi0XZeTZgaChGo17wd69ZTcrEU+RjypfXsUjbv51/ps83KfV7p4jjf4r8l+5F7OfP
        rN9p/wCQrafus5cK/EROsqIe0KHtjd1J8bfbGIjgRlluNaKVVm11pQmdIY87E5R8CttdhIfnVprUVBHG
        hGYNOCm3JyrfL310OVelNc3bxJWeTpwHGRz+BxF1OypXnq8y/HlqX6MuZYlNsdx+hoS3YXlrC8NYXDG7
        Oobvo0DMqxXFqmuqaZCnw+xdup1CwTxOaGxOBa0AAA6ACgy1CjKxT6pkedcodJLRtLY0CAIAgCAIAgCA
        0L5tD2Mq00JNK9x0XC+bjHaJGLXGc9SKnaZ3Yg2ubtXOOnPmq1tt6LyEEot67eCNaz3JBDI57XF5Jyc8
        AUJOZA3a6lWOTnzsiq49EvqUmFwmqmcrpLcnt9fD0JC17ARyvMjpnNLqVDWtoDQDKqscfLnVWoa3oqMv
        h9d90rNtb8Fown0aw/8A6JPwtXf/ADCfkiMuEV/zP6Fm2auZtjs7LO15eGF1HOABOJ5du+0oVk3OXMy0
        rgoR5USi0NwgCArl5Xm5zi1pIaMssq86qvuvbel2LXHxoqPNJdSJnszH5vY1xO9wBPiVGa33J0Jyh7r0
        RFu2eY7OM4TwNSD8QuUqk+xNqz5x6T6r6kR/cVqJoGNHNzhTt6tSfALRVPxJcs6pLoWLZHZeRkheH0dl
        jkyrT6LG7h/RqpePTJy2uiRUcQzoOGmt78C922wxyijhnuI1Hf8ABWU6ozXUoKrp1PcWVW97mkZvOHc5
        tf5huVXbhqD3yp/PRcUZVdnyZhsd3SnQPdzOnicllVTl2R1nkVx7tG7Lc0zWF7qAAVpWp92XvW7xpqO2
        cY5tcpKKMlyRStkDgx2E5OOmR7Vvjxmpb10OeZOuVbW+pO2m7LPK7E+Fj3UpVzQTQbqlWak0efsxabXz
        Tim/mjxDc1lY4PbBG1zfVcGNBFcsjTJHJvxFeJTW9wgk/Q31qSCOvy7+mjy9dubfiO/9Fxur54/MkY13
        sp78PEo1tYHMAwAPa45gAEtI9o7yCN/Hko0Mu6EeVSa0Wn2aqVjlJbTNeNsccrJGQ0yb0jM8Ljo6mZyI
        z5FLMudjXN1Nq8SEYtR6PwZnjcTUkUBJoOA4VUV9zvrSSMscjmkOaSCNCMkTae0ayipLTLZcl9CXqPoH
        7jud+h5Kwpv5+j7lRk4rr+9Ht/QmlJIYQBAEAQBAEBH342sR5EH30+K4ZC/hsk4j1aislgJB3jRVui52
        9aPkl3zTUEbagamoArzqsqmdnuhZFVPWb6lys0WFjW1rhaBU76ClVbRWkkefnLmk2ZVsahAEAQFZvLa6
        OKZ8Rjc4MIGJpGZoCcjwrTXcpEMdyjsizylGTjo03X9Y5P8A68J7cHwouFmF5r9CRXxKS7P9SRumKGcE
        dGaN9rGampOXVpwXD7NBLTRIjnWSe0zYl2ejPqvkb3g+YXN4kH2bJEc+xd0me7HcbGmr3F/CoAHgNVmG
        NGPfqa25s5+6tEnFE1oo0ADkKKQopdiLKTk9tntZNQgCAr21d4dH0bOsC41DgaCgyIOdd4XG272fgda8
        d3Lo9aIcW2X94/8AE79VEllzfboSYYUF3bZtXZb5BKzE9xFaGpJ9bLzK1qulzrmZ0tpjyPlRb1ZlaEAQ
        EVbrhhkJdm1xzJGhPEg/BcJ48ZPZKqy7K1ruiBt1wzRnqjGOLRn3tUSePKPbqT6s2ufvdDW/uu0fun+C
        09jPyOv2mr+ZGGSySN9aN47WkLVwku6N1bCXZo37mu3GRI84WA5bi4jcN/eu1FPM+Z9iNlZKguVdzcvD
        asMkDWNxNB6548mqc5lI5aLOtzcIAgCAIAgNC+pWiIgnN2Q7a1XDIklBpkjFi3YmvArJKrS5J7ZoHo3O
        Ojnkt7AAK+IKn4qfJsq89r2ml4LqS6lEIIAgCAxWmYMY57tGtLj2AVWUtvRiT0ts5BPKXuc86uJce0mp
        VulpaKRvb2eFkwWf0WQFxtM+dC9sbeHVGI+5zVByn1SLLFWk2dAUQlhAEAQBAEBWturPWFrxqx/ucKeY
        CjZUdx2TMOWp68yCY6oB4iqrSeekMF6sc2NjX8QD37/eriEuaKZTzjyyaMy3NQgCAIAgCAod/X6zpH2e
        J9XNqHO82t5jfT9acZGkpEEsHM6yu53CAIAgCApG0u2hjkEdnwuwO67jmHU1Y3lxPgplONzLcjnKfkSd
        jvCz26PE12GRozadWnhzB4j9QoWVi+D/ACZKx8h1v5GCzXY+SUxuBDG0Lzx4NB314quhRKU9S7Is7MqM
        K+aL6vt8vmWprQBQZAKxS0Uze+59WQEAQBAV7bm2YLMWjWRwb3DrHyp3rvjR3PfkRsqWoa8znKsirMdo
        kwtc7gD/AMLBlLbOj+j2xdFYIuL6yH75q3+XCqy97my3pWoIsi5HUIAgCAIAgNC/bP0lnlZvwEjtb1h7
        wudseaDR0plyzTKLd76sHKo+PxVSy4l3NlYNS0bMT1jLfou9xz86qxxJbhryK7Kjqe/MmFKIwQBAEAQB
        AVDbLZPp6zwCk4zIGXSU8ncDv0O6mko7NJR2UqxWvFVjhheMiDlprluPELmczsi7ncIAgCAoe2e1frWe
        B3KR497GnzPcpuPj/wCqRzlLwRRVOOZks1qdE4SMdhLd/wACN45LWcVJaZlPR1XY68XWiziVzHMqSM9H
        Ae0zkefA66mosrUJaTOye0Tq1MhAEAQBAc929tmOcRjSNuf2n5n3YVPxY6jvzK3LnuevIrSlEQ1LwaXB
        sbfWke1g7XGg95C1k9I6VrbO3WaEMY1jdGtDR2NFAqhvb2XCWloyIZCAIAgCAIAgObxxdHLLF9Fxp2A0
        HuoqiyOpNF1GXNBSNhcwS2zU+GXDucCO8Zj4qTiy1PXmRsqO4b8i1KyK4IAgCAIAgCAqO2WyYn/bwDDO
        3MjTpKeTuB7juI0lHZpKOy3Lc3CAICi7Z7V0xWeB2ekjxu4saePE93ZNx8ff3pHOUvBFCU45hATWyGzZ
        t0mN4IszDnu6Vw9kHhxPdrpFvv5ei7m8Y7OtxsDQGgAAAAAZAAaADcq46npAEAQBAeXuABJyAFT2BA3o
        5Db7SZZHyH23F3cTkO4ZK3hHlikUs5c0mzAtjQ2tmLN014wN3Rh0rvujL+bCuGRLUGSsaO5I66q0swgC
        AIAgCAIAgKLtNFgtmLdI0Hvph/2jxVdlR1PZaYst1a8jCop2MlmlwPa/6JB8CtoS5ZJms480Wi9tNc1c
        lOfUAQBAEAQBAEAQBAUfbTarDis8DutpI8ezxY08eJ3aa6TMfH396RzlLwRQVPOYQEhs3cT7dLhFWwsI
        6V43/UbzPu14Ax77lBfM2jHZ2CyWZkTGxxtDWNFGgaABVrbb2zsZlgBAEAQBAQm2Fs6Oyvpq+jB97X+U
        FdqI800cMmXLWzmasypCAsfous2KW0z8MMTT/M73BnioOVLsixxY92dEUQmBAEAQBAEAQBAVXbyDqxSj
        Vri3xFR72+9RMqPRMm4UvvOJEA1zVeTj6hguNyT44W8QMJ+7l5UVrRLmgiqvjyzZvrscggCAIAgCAIAg
        KVtntXgrZ4HdfSR49ni1p+lxO7t0mY+Pv70jnKXgjnynnMIDZua6pbZN0EeQGcr9zG/EnQD9DTjdaoIy
        ls7FdV3RWeJsMTaNaO8neSd5J3qrlJye2dktG2sGQgCAIAgCAonpBtlZI4h7LS49rsh7h71OxI9HIr8y
        XVRKmpZCPEz8LS7gCVgyu50L0b2Lo7DGTrK50h54jRp/C1qrb5bmy2oWoFoXE7BAEAQBAEAQBARW09nx
        2aQbwMQ+6cXkCuV0dwZ2x5ctiZTbE+rByy8FVMtn3M6wak/srPm9nY4eR+Cm4cu8SFlx7SLCpxCCAIAg
        CAIAgK9tzeMkFmrGcJc8MrvAIcTh4HLVd8eClPqayekcqVocQgMFskLWkhYYOy7KXXFZ7NG2MUxNa9xO
        rnOaCST7uwKosk5S2zulpEwtDIQBAEAQBAEBynaOUutUxP7wjub1R7grSlaginve7GRy6nI072dSJ3d5
        rDNodztN1xBkMTG5BsbAOwNAVRLq2XUVpI2lgyEAQBAEAQBAEB5kYCCDoQQewrDMp6ZzS6/VI4H4Knl3
        Ltm6tTUkLheROym+oPZQ/ou+M9WI4ZK/hsuCtCsCAIAgCAIAgP/Z
</value>
  </data>
</root>